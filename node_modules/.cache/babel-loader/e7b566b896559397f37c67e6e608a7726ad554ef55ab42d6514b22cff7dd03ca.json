{"ast":null,"code":"var _jsxFileName = \"C:\\\\todolist\\\\src\\\\components\\\\List.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Items from \"./Items\";\nimport NewPost from \"./NewPost\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  sort,\n  setSort,\n  list,\n  setList,\n  trigger,\n  setTrigger,\n  setIsAuth,\n  loginId,\n  setLoginId,\n  mail\n}) => {\n  _s();\n  // const [trigger,setTrigger] = useState(0);\n  // const [sortList, setSortList] = useState([])\n  // const [sort, setSort] = useState(\"all\");\n  const [value, setValue] = useState({\n    text: \"\",\n    completed: false,\n    user_id: null\n  });\n\n  // useEffect(() => {\n  //     const list_sorted = async () => {\n  //         try {\n  //             let url = `api/post/${loginId}`;\n  //             if (sort === \"completed\") url = `api/post/true/${loginId}`;\n  //             if (sort === \"not-completed\") url = `api/post/false/${loginId}`;\n  //\n  //             const response = await fetch(url);\n  //             const data = await response.json();\n  //             setSortList(data.rows);\n  //         } catch(err) {\n  //             console.log(err);\n  //         }\n  //     }\n  //     list_sorted();\n  // }, [sort, loginId, trigger]);\n\n  const appendToDoList = async () => {\n    try {\n      const response = await fetch('api/post', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(value)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Site failed');\n      }\n      setValue({\n        text: \"\",\n        completed: false,\n        user_id: null\n      });\n      setTrigger(trigger + 1);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const deleteItem = async id => {\n    try {\n      const response = await fetch(`api/post/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Не удалось удалить запись');\n      }\n      setTrigger(trigger + 1);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      mail: mail,\n      setSort: setSort,\n      setIsAuth: setIsAuth,\n      setLoginId: setLoginId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Items, {\n      trigger: trigger,\n      setTrigger: setTrigger,\n      loginId: loginId,\n      list: list,\n      deleteItem: deleteItem,\n      setList: setSortList,\n      sort: sort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NewPost, {\n      loginId: loginId,\n      text: value.text,\n      setValue: setValue,\n      appendToDoList: appendToDoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(List, \"94QI7RIUsGTUCDNcUFp+QRTS/Co=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useEffect","useState","Items","NewPost","Header","jsxDEV","_jsxDEV","List","sort","setSort","list","setList","trigger","setTrigger","setIsAuth","loginId","setLoginId","mail","_s","value","setValue","text","completed","user_id","appendToDoList","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","err","console","error","deleteItem","id","log","children","fileName","_jsxFileName","lineNumber","columnNumber","setSortList","_c","$RefreshReg$"],"sources":["C:/todolist/src/components/List.js"],"sourcesContent":["import React, { useEffect, useState} from 'react';\r\nimport Items from \"./Items\";\r\nimport NewPost from \"./NewPost\";\r\nimport Header from \"./Header\";\r\n\r\nconst List = ({sort,setSort,list,setList, trigger, setTrigger,setIsAuth, loginId ,setLoginId, mail}) => {\r\n\r\n    // const [trigger,setTrigger] = useState(0);\r\n    // const [sortList, setSortList] = useState([])\r\n    // const [sort, setSort] = useState(\"all\");\r\n    const [value, setValue] = useState({\r\n        text: \"\",\r\n        completed: false,\r\n        user_id: null\r\n    });\r\n\r\n    // useEffect(() => {\r\n    //     const list_sorted = async () => {\r\n    //         try {\r\n    //             let url = `api/post/${loginId}`;\r\n    //             if (sort === \"completed\") url = `api/post/true/${loginId}`;\r\n    //             if (sort === \"not-completed\") url = `api/post/false/${loginId}`;\r\n    //\r\n    //             const response = await fetch(url);\r\n    //             const data = await response.json();\r\n    //             setSortList(data.rows);\r\n    //         } catch(err) {\r\n    //             console.log(err);\r\n    //         }\r\n    //     }\r\n    //     list_sorted();\r\n    // }, [sort, loginId, trigger]);\r\n\r\n\r\n    const appendToDoList = async () => {\r\n        try{\r\n            const response = await fetch('api/post',{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(value)\r\n            })\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Site failed');\r\n            }\r\n            setValue({text:\"\", completed: false,user_id: null})\r\n            setTrigger(trigger+1)\r\n        }catch(err){\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    const deleteItem = async (id) => {\r\n        try{\r\n            const response = await fetch(`api/post/${id}`,{\r\n                method: 'DELETE',\r\n            })\r\n            if (!response.ok) {\r\n                throw new Error('Не удалось удалить запись');\r\n            }\r\n            setTrigger(trigger+1)\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header mail={mail} setSort={setSort} setIsAuth={setIsAuth} setLoginId={setLoginId}/>\r\n            <Items trigger={trigger} setTrigger={setTrigger} loginId={loginId} list={list}  deleteItem={deleteItem} setList={setSortList} sort={sort}/>\r\n            <NewPost loginId={loginId} text={value.text} setValue={setValue} appendToDoList={appendToDoList}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default List;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}