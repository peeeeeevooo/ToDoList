{"ast":null,"code":"var _jsxFileName = \"C:\\\\todolist\\\\src\\\\components\\\\Item.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { IoCloseCircleSharp, IoHammerSharp } from \"react-icons/io5\";\nimport EditItem from \"./EditItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = props => {\n  _s();\n  const [edit, setEdit] = useState(false);\n  const toggleCompleted = async () => {\n    try {\n      const response = await fetch('api/post', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: props.item.id,\n          text: props.item.text,\n          completed: !props.item.completed\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Ошибка при обновлении');\n      }\n      if (props.sort === \"all\") {\n        const updatedList = props.list.map(el => el.id === props.item.id ? {\n          ...el,\n          completed: !props.item.completed\n        } : el);\n        props.setList(updatedList);\n      } else {\n        props.setTrigger(props.trigger + 1);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Element\",\n    children: [edit ? /*#__PURE__*/_jsxDEV(EditItem, {\n      setTrigger: props.setTrigger,\n      trigger: props.trigger,\n      loginId: props.loginId,\n      item: props.item,\n      setEdit: setEdit,\n      list: props.list,\n      setList: props.setList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [props.id + 1, \". \", props.item.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(IoCloseCircleSharp, {\n      onClick: () => props.deleteItem(props.item.id),\n      className: \"icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IoHammerSharp, {\n      onClick: () => {\n        setEdit(!edit);\n      },\n      className: \"icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      className: \"check\",\n      checked: props.item.completed,\n      onChange: toggleCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, props.item.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Item, \"XWuH1s0cPjelCjvJiiBBkLvdpaI=\");\n_c = Item;\nexport default Item;\nvar _c;\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["React","useState","IoCloseCircleSharp","IoHammerSharp","EditItem","jsxDEV","_jsxDEV","Item","props","_s","edit","setEdit","toggleCompleted","response","fetch","method","headers","body","JSON","stringify","id","item","text","completed","ok","Error","sort","updatedList","list","map","el","setList","setTrigger","trigger","err","console","error","className","children","loginId","fileName","_jsxFileName","lineNumber","columnNumber","onClick","deleteItem","type","checked","onChange","_c","$RefreshReg$"],"sources":["C:/todolist/src/components/Item.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {IoCloseCircleSharp, IoHammerSharp} from \"react-icons/io5\";\r\nimport EditItem from \"./EditItem\";\r\n\r\nconst Item = (props) => {\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    const toggleCompleted = async () => {\r\n        try {\r\n            const response = await fetch('api/post', {\r\n                method: 'PUT',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({id: props.item.id, text: props.item.text, completed: !props.item.completed}),\r\n            })\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Ошибка при обновлении');\r\n            }\r\n\r\n\r\n            if (props.sort === \"all\") {\r\n                const updatedList = props.list.map((el) =>\r\n                    el.id === props.item.id ? { ...el, completed: !props.item.completed} : el\r\n                );\r\n                props.setList(updatedList);\r\n            } else {\r\n                props.setTrigger(props.trigger + 1);\r\n            }\r\n\r\n        }catch(err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Element\" key={props.item.id}>\r\n            {edit ? <EditItem setTrigger={props.setTrigger} trigger={props.trigger} loginId={props.loginId} item={props.item} setEdit={setEdit} list={props.list} setList={props.setList} />\r\n             :\r\n                <span>{props.id+1}. {props.item.text}</span>\r\n            }\r\n            <IoCloseCircleSharp onClick={() => props.deleteItem(props.item.id)} className=\"icon\"/>\r\n            <IoHammerSharp onClick={() => {setEdit(!edit)}} className=\"icon\"/>\r\n                <input type=\"checkbox\" className=\"check\" checked={props.item.completed} onChange={toggleCompleted}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Item;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}