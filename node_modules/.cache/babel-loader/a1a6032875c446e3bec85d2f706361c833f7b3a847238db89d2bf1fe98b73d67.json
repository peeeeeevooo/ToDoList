{"ast":null,"code":"var _jsxFileName = \"C:\\\\todolist\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [error, setError] = React.useState(false);\n  const login = () => {\n    props.users.map(user => {\n      if (user.email === email && user.password === password) {\n        setEmail(\"\");\n        setPassword(\"\");\n        props.setIsAuth(true);\n      }\n      ;\n    });\n    setError(true);\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        placeholder: \"Email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\",\n          fontSize: \"bold\"\n        },\n        children: \"\\u041D\\u0415 \\u0412\\u0415\\u0420\\u041D\\u042B\\u0415 \\u0414\\u0410\\u041D\\u041D\\u042B\\u0415\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"Lw6fnQDhm6jsOqAyGKvgSas+k/M=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Login","props","_s","email","setEmail","useState","password","setPassword","error","setError","login","users","map","user","setIsAuth","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","onClick","style","color","fontSize","_c","$RefreshReg$"],"sources":["C:/todolist/src/components/Login.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Login = (props) => {\r\n\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('')\r\n    const [error, setError] = React.useState(false);\r\n\r\n    const login = () => {\r\n        props.users.map((user) => {\r\n                if (user.email === email && user.password === password) {\r\n                    setEmail(\"\");\r\n                    setPassword(\"\")\r\n                    props.setIsAuth(true);\r\n                };\r\n            }\r\n        )\r\n\r\n        setError(true);\r\n        setEmail(\"\");\r\n        setPassword(\"\")\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n        <form>\r\n            <input type=\"text\" value={email} placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} />\r\n            <input type=\"password\" value={password} placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n            <button type=\"button\" onClick={login}>Login</button>\r\n            {error ?\r\n            <div style={{color: \"red\", fontSize: \"bold\"}}>НЕ ВЕРНЫЕ ДАННЫЕ</div>\r\n                : null\r\n            }\r\n        </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAErB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,KAAK,CAACQ,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMK,KAAK,GAAGA,CAAA,KAAM;IAChBT,KAAK,CAACU,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAK;MAClB,IAAIA,IAAI,CAACV,KAAK,KAAKA,KAAK,IAAIU,IAAI,CAACP,QAAQ,KAAKA,QAAQ,EAAE;QACpDF,QAAQ,CAAC,EAAE,CAAC;QACZG,WAAW,CAAC,EAAE,CAAC;QACfN,KAAK,CAACa,SAAS,CAAC,IAAI,CAAC;MACzB;MAAC;IACL,CACJ,CAAC;IAEDL,QAAQ,CAAC,IAAI,CAAC;IACdL,QAAQ,CAAC,EAAE,CAAC;IACZG,WAAW,CAAC,EAAE,CAAC;EAEnB,CAAC;EAGD,oBACIR,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBpB,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAOqB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAElB,KAAM;QAACmB,WAAW,EAAC,OAAO;QAACC,QAAQ,EAAGC,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACJ,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClGpB,OAAA;QAAOqB,IAAI,EAAC,UAAU;QAACC,KAAK,EAAEf,QAAS;QAACgB,WAAW,EAAC,UAAU;QAACC,QAAQ,EAAGC,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACC,MAAM,CAACJ,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/GpB,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAACM,OAAO,EAAEhB,KAAM;QAAAK,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACnDX,KAAK,gBACNT,OAAA;QAAK4B,KAAK,EAAE;UAACC,KAAK,EAAE,KAAK;UAAEC,QAAQ,EAAE;QAAM,CAAE;QAAAd,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,GAC9D,IAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAER,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEd,CAAC;AAACjB,EAAA,CArCIF,KAAK;AAAA8B,EAAA,GAAL9B,KAAK;AAuCX,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}