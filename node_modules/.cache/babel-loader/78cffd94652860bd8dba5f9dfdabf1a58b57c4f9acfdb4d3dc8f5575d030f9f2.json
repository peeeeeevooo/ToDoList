{"ast":null,"code":"var _jsxFileName = \"C:\\\\todolist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport List from \"./components/List\";\nimport \"./styles/app.css\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAuth, setIsAuth] = useState(false);\n  const [users, setUsers] = useState([{\n    id: 1,\n    email: \"213@mail.ru\",\n    password: \"123123\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: isAuth ? /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          users: users,\n          setIsAuth: setIsAuth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"drLxbsFzmJ9FH1lOy6b/P0oOGiI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","List","BrowserRouter","Route","Routes","Login","jsxDEV","_jsxDEV","App","_s","isAuth","setIsAuth","users","setUsers","id","email","password","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/todolist/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport List from \"./components/List\";\nimport \"./styles/app.css\"\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\"\nimport Login from \"./components/Login\";\n\nconst App = () => {\n    const [isAuth, setIsAuth] = useState(false);\n    const [users, setUsers] = useState([\n        {id: 1, email: \"213@mail.ru\", password: \"123123\"}\n    ]);\n\n    return(\n        <div>\n            <Routes>\n                {isAuth ?\n                    <Route path=\"*\" element={<List />} />\n                    :\n                    <Route path=\"*\" element={<Login users={users} setIsAuth={setIsAuth}/>} />\n                }\n            </Routes>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAO,kBAAkB;AACzB,SAAQC,aAAa,EAAEC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AAC7D,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAC/B;IAACc,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,aAAa;IAAEC,QAAQ,EAAE;EAAQ,CAAC,CACpD,CAAC;EAEF,oBACIT,OAAA;IAAAU,QAAA,eACIV,OAAA,CAACH,MAAM;MAAAa,QAAA,EACFP,MAAM,gBACHH,OAAA,CAACJ,KAAK;QAACe,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEZ,OAAA,CAACN,IAAI;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAErChB,OAAA,CAACJ,KAAK;QAACe,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEZ,OAAA,CAACF,KAAK;UAACO,KAAK,EAAEA,KAAM;UAACD,SAAS,EAAEA;QAAU;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACd,EAAA,CAjBID,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAmBT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}