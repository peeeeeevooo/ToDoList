{"ast":null,"code":"var _jsxFileName = \"C:\\\\todolist\\\\src\\\\components\\\\List.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Items from \"./Items\";\nimport NewPost from \"./NewPost\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  list,\n  setList,\n  setIsAuth,\n  users,\n  loginId,\n  setLoginId,\n  mail\n}) => {\n  _s();\n  const [sortList, setSortList] = useState([]);\n  const [count, setCount] = useState(5);\n  const [sort, setSort] = useState(\"all\");\n  useEffect(() => {\n    if (sort === \"all\") {\n      setSortList(list.filter(item => item.user_id === loginId));\n    }\n    if (sort === \"completed\") {\n      setSortList(list.filter(item => item.completed && item.user_id === loginId));\n    }\n    if (sort === \"not-completed\") {\n      setSortList(list.filter(item => !item.completed && item.user_id === loginId));\n    }\n  }, [list, sort]);\n  const [value, setValue] = useState({\n    user_id: null,\n    id: null,\n    text: \"\",\n    completed: false\n  });\n  const appendToDoList = () => {\n    setList([...list, value]);\n    setValue({\n      user_id: null,\n      id: null,\n      text: \"\",\n      completed: false\n    });\n    setCount(count + 1);\n  };\n  const deleteItem = index => {\n    setList(list.filter(el => el.id !== index));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      mail: mail,\n      setSort: setSort,\n      setIsAuth: setIsAuth,\n      setLoginId: setLoginId,\n      loginId: loginId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Items, {\n      loginId: loginId,\n      list: list,\n      sortList: sortList,\n      deleteItem: deleteItem,\n      setList: setList,\n      sort: sort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NewPost, {\n      loginId: loginId,\n      count: count,\n      value: value.text,\n      setValue: setValue,\n      appendToDoList: appendToDoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(List, \"+mIr1NR2ywg12NrLrahpfL7yLcw=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useEffect","useState","Items","NewPost","Header","jsxDEV","_jsxDEV","List","list","setList","setIsAuth","users","loginId","setLoginId","mail","_s","sortList","setSortList","count","setCount","sort","setSort","filter","item","user_id","completed","value","setValue","id","text","appendToDoList","deleteItem","index","el","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/todolist/src/components/List.js"],"sourcesContent":["import React, { useEffect, useState} from 'react';\r\nimport Items from \"./Items\";\r\nimport NewPost from \"./NewPost\";\r\nimport Header from \"./Header\";\r\n\r\nconst List = ({list,setList, setIsAuth, users, loginId ,setLoginId, mail}) => {\r\n\r\n\r\n    const [sortList, setSortList] = useState([\r\n    ])\r\n    const [count, setCount] = useState(5);\r\n    const [sort, setSort] = useState(\"all\");\r\n\r\n    useEffect(() => {\r\n        if(sort === \"all\"){\r\n            setSortList(list.filter(item => item.user_id === loginId))\r\n        }\r\n        if (sort === \"completed\"){\r\n            setSortList(list.filter(item => item.completed && item.user_id === loginId))\r\n        }\r\n        if (sort === \"not-completed\"){\r\n            setSortList(list.filter(item => !item.completed && item.user_id === loginId))\r\n        }\r\n    },[list,sort])\r\n\r\n\r\n    const [value, setValue] = useState({\r\n        user_id: null,\r\n        id: null,\r\n        text: \"\",\r\n        completed: false\r\n    });\r\n\r\n    const appendToDoList = () => {\r\n        setList([...list, value])\r\n        setValue({user_id: null, id:null , text:\"\", completed: false})\r\n        setCount(count+1)\r\n    }\r\n\r\n    const deleteItem = (index) => {\r\n        setList(list.filter(el => el.id !== index))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header mail={mail} setSort={setSort} setIsAuth={setIsAuth} setLoginId={setLoginId} loginId={loginId}/>\r\n            <Items loginId={loginId} list={list} sortList={sortList} deleteItem={deleteItem} setList={setList} sort={sort}/>\r\n            <NewPost loginId={loginId} count = {count} value={value.text} setValue={setValue} appendToDoList={appendToDoList}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default List;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACjD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,IAAI,GAAGA,CAAC;EAACC,IAAI;EAACC,OAAO;EAAEC,SAAS;EAAEC,KAAK;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAG1E,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EACxC,CAAC;EACF,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACZ,IAAGoB,IAAI,KAAK,KAAK,EAAC;MACdH,WAAW,CAACT,IAAI,CAACc,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,KAAKZ,OAAO,CAAC,CAAC;IAC9D;IACA,IAAIQ,IAAI,KAAK,WAAW,EAAC;MACrBH,WAAW,CAACT,IAAI,CAACc,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACE,SAAS,IAAIF,IAAI,CAACC,OAAO,KAAKZ,OAAO,CAAC,CAAC;IAChF;IACA,IAAIQ,IAAI,KAAK,eAAe,EAAC;MACzBH,WAAW,CAACT,IAAI,CAACc,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACE,SAAS,IAAIF,IAAI,CAACC,OAAO,KAAKZ,OAAO,CAAC,CAAC;IACjF;EACJ,CAAC,EAAC,CAACJ,IAAI,EAACY,IAAI,CAAC,CAAC;EAGd,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC;IAC/BuB,OAAO,EAAE,IAAI;IACbI,EAAE,EAAE,IAAI;IACRC,IAAI,EAAE,EAAE;IACRJ,SAAS,EAAE;EACf,CAAC,CAAC;EAEF,MAAMK,cAAc,GAAGA,CAAA,KAAM;IACzBrB,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEkB,KAAK,CAAC,CAAC;IACzBC,QAAQ,CAAC;MAACH,OAAO,EAAE,IAAI;MAAEI,EAAE,EAAC,IAAI;MAAGC,IAAI,EAAC,EAAE;MAAEJ,SAAS,EAAE;IAAK,CAAC,CAAC;IAC9DN,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;EACrB,CAAC;EAED,MAAMa,UAAU,GAAIC,KAAK,IAAK;IAC1BvB,OAAO,CAACD,IAAI,CAACc,MAAM,CAACW,EAAE,IAAIA,EAAE,CAACL,EAAE,KAAKI,KAAK,CAAC,CAAC;EAC/C,CAAC;EAED,oBACI1B,OAAA;IAAA4B,QAAA,gBACI5B,OAAA,CAACF,MAAM;MAACU,IAAI,EAAEA,IAAK;MAACO,OAAO,EAAEA,OAAQ;MAACX,SAAS,EAAEA,SAAU;MAACG,UAAU,EAAEA,UAAW;MAACD,OAAO,EAAEA;IAAQ;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvGhC,OAAA,CAACJ,KAAK;MAACU,OAAO,EAAEA,OAAQ;MAACJ,IAAI,EAAEA,IAAK;MAACQ,QAAQ,EAAEA,QAAS;MAACe,UAAU,EAAEA,UAAW;MAACtB,OAAO,EAAEA,OAAQ;MAACW,IAAI,EAAEA;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChHhC,OAAA,CAACH,OAAO;MAACS,OAAO,EAAEA,OAAQ;MAACM,KAAK,EAAIA,KAAM;MAACQ,KAAK,EAAEA,KAAK,CAACG,IAAK;MAACF,QAAQ,EAAEA,QAAS;MAACG,cAAc,EAAEA;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClH,CAAC;AAEd,CAAC;AAACvB,EAAA,CA7CIR,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AA+CV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}