{"ast":null,"code":"var _jsxFileName = \"C:\\\\todolist\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const [log, setLog] = React.useState({\n    email: '',\n    password: ''\n  });\n  const [reg, setReg] = React.useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = React.useState(false);\n  const [regError, setRegError] = React.useState(false);\n  const login = async () => {\n    try {\n      const response = await fetch(`/api/user/${log.email}/${log.password}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error();\n      const data = await response.json();\n      if (data.success) {\n        props.setLoginId(data.user.id);\n        props.setMail(log.email);\n        props.setIsAuth(true);\n        setLog({\n          email: \"\",\n          password: \"\"\n        });\n      } else {\n        setError(true);\n        setRegError(false);\n        setLog({\n          email: \"\",\n          password: \"\"\n        });\n      }\n    } catch (err) {\n      setError(true);\n      setRegError(false);\n      setLog({\n        email: \"\",\n        password: \"\"\n      });\n      console.error('Login error:', err);\n    }\n  };\n  const register = async () => {\n    try {\n      const checkResponse = await fetch(`api/user/${reg.email}/${reg.password}`);\n      if (!checkResponse.ok) {\n        throw new Error('Не удалось проверить существующих пользователей');\n      }\n      const checkData = await checkResponse.json();\n      if (checkData.rows && checkData.rows.length > 0) {\n        setRegError(true);\n        setError(false);\n        return;\n      }\n      const response = await fetch('/api/user', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reg)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Registration failed');\n      }\n      props.setMail(reg.email);\n      props.setLoginId(data.rows[0].id);\n      setReg({\n        email: \"\",\n        password: \"\"\n      });\n      props.setIsAuth(true);\n      setRegError(false);\n    } catch (err) {\n      console.error('Registration error:', err);\n      setRegError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Lgn\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\",\n          color: \"white\"\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"inpFrm\",\n          value: log.email,\n          placeholder: \"Email\",\n          onChange: e => setLog({\n            ...log,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"inpFrm\",\n          value: log.password,\n          placeholder: \"Password\",\n          onChange: e => setLog({\n            ...log,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btnFrm\",\n          onClick: login,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\",\n            fontWeight: \"bold\"\n          },\n          children: \"\\u041D\\u0415\\u0412\\u0415\\u0420\\u041D\\u042B\\u0415 \\u0414\\u0410\\u041D\\u041D\\u042B\\u0415\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\",\n          color: \"white\"\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"inpFrm\",\n          value: reg.email,\n          placeholder: \"Email\",\n          onChange: e => setReg({\n            ...reg,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"inpFrm\",\n          value: reg.password,\n          placeholder: \"Password\",\n          onChange: e => setReg({\n            ...reg,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btnFrm\",\n          onClick: register,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), regError && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\",\n            fontWeight: \"bold\"\n          },\n          children: \"\\u0422\\u0410\\u041A\\u041E\\u0419 EMAIL \\u0423\\u0416\\u0415 \\u0417\\u0410\\u0420\\u0415\\u0413\\u0418\\u0421\\u0422\\u0420\\u0418\\u0420\\u041E\\u0412\\u0410\\u041D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"CbwAdZ2Jyxgi5r5VMa4Z6bdbyLs=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Login","props","_s","log","setLog","useState","email","password","reg","setReg","error","setError","regError","setRegError","login","response","fetch","method","credentials","ok","Error","data","json","success","setLoginId","user","id","setMail","setIsAuth","err","console","register","checkResponse","checkData","rows","length","headers","body","JSON","stringify","message","className","children","style","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","onClick","fontWeight","_c","$RefreshReg$"],"sources":["C:/todolist/src/components/Login.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Login = (props) => {\r\n    const [log, setLog] = React.useState({email: '', password: ''});\r\n    const [reg, setReg] = React.useState({email: \"\", password: \"\"});\r\n    const [error, setError] = React.useState(false);\r\n    const [regError, setRegError] = React.useState(false);\r\n\r\n    const login = async () => {\r\n        try {\r\n            const response = await fetch(`/api/user/${log.email}/${log.password}`, {\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            });\r\n\r\n            if (!response.ok) throw new Error();\r\n\r\n            const data = await response.json();\r\n            if (data.success) {\r\n                props.setLoginId(data.user.id);\r\n                props.setMail(log.email);\r\n                props.setIsAuth(true);\r\n                setLog({ email: \"\", password: \"\" });\r\n            } else {\r\n                setError(true);\r\n                setRegError(false);\r\n                setLog({ email: \"\", password: \"\" });\r\n            }\r\n\r\n        } catch (err) {\r\n            setError(true);\r\n            setRegError(false);\r\n            setLog({ email: \"\", password: \"\" });\r\n            console.error('Login error:', err);\r\n        }\r\n    };\r\n\r\n    const register = async () => {\r\n\r\n        try {\r\n            const checkResponse = await fetch(`api/user/${reg.email}/${reg.password}`);\r\n            if (!checkResponse.ok) {\r\n                throw new Error('Не удалось проверить существующих пользователей');\r\n            }\r\n            const checkData = await checkResponse.json();\r\n            if(checkData.rows && checkData.rows.length > 0){\r\n                setRegError(true);\r\n                setError(false);\r\n                return;\r\n            }\r\n\r\n\r\n            const response = await fetch('/api/user', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(reg),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Registration failed');\r\n            }\r\n\r\n            props.setMail(reg.email);\r\n            props.setLoginId(data.rows[0].id);\r\n            setReg({email: \"\", password: \"\"});\r\n            props.setIsAuth(true);\r\n            setRegError(false);\r\n        } catch (err) {\r\n            console.error('Registration error:', err);\r\n            setRegError(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Lgn\">\r\n            <div>\r\n                <h1 style={{textAlign: \"center\", color: \"white\"}}>Login</h1>\r\n                <form className=\"form\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"inpFrm\"\r\n                        value={log.email}\r\n                        placeholder=\"Email\"\r\n                        onChange={(e) => setLog({...log, email: e.target.value})}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"inpFrm\"\r\n                        value={log.password}\r\n                        placeholder=\"Password\"\r\n                        onChange={(e) => setLog({...log, password: e.target.value})}\r\n                    />\r\n                    <button type=\"button\" className=\"btnFrm\" onClick={login}>Login</button>\r\n                    {error && (\r\n                        <div style={{color: \"red\", fontWeight: \"bold\"}}>НЕВЕРНЫЕ ДАННЫЕ</div>\r\n                    )}\r\n                </form>\r\n            </div>\r\n            <div>\r\n                <h1 style={{textAlign: \"center\", color: \"white\"}}>Register</h1>\r\n                <form className=\"form\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"inpFrm\"\r\n                        value={reg.email}\r\n                        placeholder=\"Email\"\r\n                        onChange={(e) => setReg({...reg, email: e.target.value})}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"inpFrm\"\r\n                        value={reg.password}\r\n                        placeholder=\"Password\"\r\n                        onChange={(e) => setReg({...reg, password: e.target.value})}\r\n                    />\r\n                    <button type=\"button\" className=\"btnFrm\" onClick={register}>Register</button>\r\n                    {regError && (\r\n                        <div style={{color: \"red\", fontWeight: \"bold\"}}>ТАКОЙ EMAIL УЖЕ ЗАРЕГИСТРИРОВАН</div>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}